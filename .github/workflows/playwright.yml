name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: |
          frontend/package-lock.json
          backend/package-lock.json

    # Install backend dependencies
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    # Install frontend dependencies
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    # Install Playwright browsers
    - name: Install Playwright Browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps

    # Build backend
    - name: Build backend
      working-directory: ./backend
      run: npm run build

    # Run backend tests (Jest)
    - name: Run backend unit tests
      working-directory: ./backend
      run: npm test

    # Run frontend tests (Jest)
    - name: Run frontend unit tests
      working-directory: ./frontend
      run: npm test -- --coverage --watchAll=false

    # Start backend in background - MUST START FIRST
    - name: Start backend server
      working-directory: ./backend
      run: |
        npm run dev > backend.log 2>&1 &
        echo $! > backend.pid
      env:
        NODE_ENV: test

    # Wait for backend to be fully ready with retry logic
    - name: Wait for backend
      run: |
        echo "Waiting for backend to be ready..."
        for i in {1..40}; do
          if curl -f http://localhost:5000/api/tasks 2>/dev/null; then
            echo "Backend is ready!"
            sleep 2
            exit 0
          fi
          echo "Attempt $i: Backend not ready yet, waiting..."
          sleep 3
        done
        echo "Backend failed to start!"
        cat backend/backend.log || true
        exit 1

    # Start frontend in background - STARTS AFTER BACKEND
    - name: Start frontend server
      working-directory: ./frontend
      run: |
        npm start > frontend.log 2>&1 &
        echo $! > frontend.pid
      env:
        CI: true

    # Wait for frontend to be fully ready
    - name: Wait for frontend
      run: |
        echo "Waiting for frontend to be ready..."
        for i in {1..60}; do
          if curl -f http://localhost:3000 2>/dev/null; then
            echo "Frontend is ready!"
            # Give it extra time to fully initialize and connect to backend
            sleep 5
            exit 0
          fi
          echo "Attempt $i: Frontend not ready yet, waiting..."
          sleep 3
        done
        echo "Frontend failed to start!"
        cat frontend/frontend.log || true
        exit 1

    # Verify both services are responding without errors
    - name: Verify services are healthy
      run: |
        echo "Checking backend health..."
        curl -f http://localhost:5000/api/tasks || (cat backend/backend.log && exit 1)
        echo "Checking frontend health..."
        curl -f http://localhost:3000 || (cat frontend/frontend.log && exit 1)
        echo "Both services are healthy!"

    # Run Frontend E2E tests
    - name: Run Frontend E2E tests
      working-directory: ./frontend
      run: npx playwright test
      continue-on-error: false

    # Run Backend API tests
    - name: Run Backend E2E tests
      working-directory: ./backend
      run: npx playwright test
      continue-on-error: false

    # Print logs on failure
    - name: Print server logs on failure
      if: failure()
      run: |
        echo "=== Backend Logs ==="
        cat backend/backend.log || echo "No backend logs"
        echo "=== Frontend Logs ==="
        cat frontend/frontend.log || echo "No frontend logs"

    # Upload Playwright reports
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-frontend
        path: frontend/playwright-report/
        retention-days: 30

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-backend
        path: backend/playwright-report/
        retention-days: 30

    # Upload test results
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          frontend/test-results/
          backend/test-results/
        retention-days: 30
